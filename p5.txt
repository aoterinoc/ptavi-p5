 Creación de repositorio para la práctica

1. Con el navegador, dirígete al repositorio ptavi-p5 en la cuenta del profesor en GitHub1 y realiza un fork, de manera que consigas tener una copia del repositorio en tu cuenta de GitHub. Clona el repositorio que acabas de crear a local para poder editar los archivos. Trabaja a partir de ahora en ese repositorio, sincronizando los cambios que vayas realizando.

Como tarde al final de la práctica, deberás realizar un push para subir tus cambios a tu repositorio en GitHub. En esta práctica, al contrario que con las demás, se recomienda hacer frecuentes commits, pero el push al final.

================================================================================
================================================================================

Análisis de una sesión SIP

Se ha capturado una sesión SIP (archivo sip.cap.gz), que se puede abrir con Wireshark2. Se pide rellenar las cuestiones que se plantean en este guión en el fichero p5.txt que encontrarás también en el repositorio.

2. Observa que las tramas capturadas corresponden a una sesión SIP con Ekiga, un cliente de VoIP para GNOME. Responde a las siguientes cuestiones:
 ** ¿Cuántos paquetes componen la captura? 
- La captura está compuesta por 954 paquetes
 
** ¿Cuánto tiempo dura la captura?
- Para observar cuando dura la captura nos fijamos en la columna "Time" del último
y primer paquete,vemos que la duración de la captura es 36,614717.

 ** ¿Qué IP tiene la máquina donde se ha efectuado la captura? ¿Se trata de una IP pública o de una IP privada? ¿Por qué lo sabes?
La IP donde se ejecuta la captura es: 192.168.1.34
Se trata de una IP privada porque pertenece al rango 192.168.0.0 a 192.168.255.255,
además no podríamos capturar en la IP pública pues veríamos la IP del NAT y no 
de la red privada.

3. Antes de analizar las tramas, mira las estadísticas generales que aparecen en el menú de Statistics. En el apartado de jerarquía de protocolos (Protocol Hierarchy) se puede ver el porcentaje del tráfico correspondiente al protocolo TCP y UDP.
 ** ¿Cuál de los dos es mayor? ¿Es esto consistente con una aplicación que transmite en tiempo real?
El porcentaje de tráfico correspondiente a UDP es mayor 
Si es consistente pues en una aplicación a tiempo real nos interesa que lleguen
los paquetes lo mas rápido posibl aunque tengamos pérdidas.

 ** ¿Qué otros protocolos podemos ver en la jerarquía de protocolos?
Los protocolos podemos verlos en "Protocol Hierarchy Statistcs" y estos son:
IP,UDP,RTP,RTCP,TCP,HTTP

4. Observa por encima el flujo de tramas en el menú de Statistics en IO Graphs. La captura que estamos viendo incluye desde la inicialización (registro) de la aplicación hasta su finalización, con una llamada entremedias.
 ** Filtra por sip para conocer cuándo se envían paquetes SIP. ¿En qué segundos tienen lugar esos envíos?
Tienen lugar en el segundo 0.56-0.58s, 14-15s, 16-17s, 38-40s,55-56s aproximadamente

 ** Y los paquetes con RTP, ¿cuándo se envían? 12-22s, 22-39s



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

5. Analiza las primeras cuatro tramas de la captura nada más arrancar Ekiga.
 ** ¿Qué servicio es el utilizado en estas tramas?
DNS para traduccir el nombre de dominio a IP

 ** ¿Cuál es la dirección IP del servidor de nombres del ordenador que ha lanzado Ekiga?
192.168.1.34

 ** ¿Qué dirección IP (de ekiga.net) devuelve el servicio de nombres?
80.58.61.250

 ** ¿Por qué se pide también para 35.162.64.86.in-addr.arpa?
No podemos saberlo, lo que si podemos ver es que nuestro servidor no acepta resolución inversa!!!!!!

6. A continuación, hay más de una docena de tramas TCP/HTTP.
 ** ¿Podrías decir la URL que se está pidiendo?
http://ekiga.net/ip/

 ** ¿Qué user agent (UA) la está pidiendo?
Ekiga

 ** ¿Qué devuelve el servidor? 
HTTP/1.1 200 OK, con la IP de la URL pedida.

 ** Si lanzamos el navegador web, por ejemplo, Mozilla Firefox, y vamos a la misma URL, ¿qué recibimos? ¿Qué es, entonces, lo que está respondiendo el servidor?
Recibimos una IP. El servidor nos está respondiendo (83.36.48.212)
con nuestra IP pública.

7. Hasta la trama 45 se puede observar una secuencia de tramas del protocolo STUN.
 ** ¿Por qué crees que se hace uso de este protocolo en esta captura? Busca en la Wikipedia.
 Se hace uso de este protocolo para saber nuestra ip pública y el tipo de NAT en el
que nos encontramos

** ¿Estamos tras un NAT? 
Si porque la IP pública no es la IP de enlace.


8. La trama 46 es la primera trama SIP. En un entorno como el de Internet, lo habitual es desconocer la dirección IP de la otra parte al realizar una llamada. Por eso, todo usuario registra su localización en un servidor Registrar. El Registrar guarda información sobre los usuarios en un servidor de localización que puede ser utilizado para localizar usuarios.
 
** ¿Qué dirección IP tiene el servidor Registrar?
86.64.162.35
 ** ¿A qué puerto (del servidor Registrar) se envían los paquetes SIP?
5060
 ** ¿Qué método SIP utiliza el UA para registrarse?
REGISTER
 ** Además de REGISTER, ¿qué instrucciones SIP entiende el UA?
Esto lo observamos en la cabecera Allow:
INVITE,ACK,OPTIONS,BYE,CANCEL,NOTIFY,REFER,MESSAGE


[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

9. Fijémonos en las tramas siguientes a la número 46:
 ** ¿Se registra con éxito en el primer intento?
No, observamos en el paquete 50 un código de error 401

 ** ¿Cómo sabemos si el registro se ha realizado correctamente o no?
Un registro se realiza correctamente cuando el servidor nos conteste
con un 200 OK

 ** ¿Podrías identificar las diferencias entre el primer intento y el segundo de registro? (fíjate en el tamaño de los paquetes y mira a qué se debe el cambio)
En el primer intento falta la cabecera:
Authorization: Digest username="grex", realm="ekiga.net", nonce="45a439ee7438aaea43ae8c7c2382922187f86c8b", uri="sip:ekiga.net", algorithm=md5, response="5267d4e49d707d4443baefa913e8ff90"
 
** ¿Cuánto es el valor del tiempo de expiración de la sesión? Indica las unidades.
Expires : 3600s

10. Una vez registrados, podemos efectuar una llamada. Vamos a probar con el servicio de eco de Ekiga que nos permite comprobar si nos hemos conectado correctamente. El servicio de eco tiene la dirección sip:500@ekiga.net. Veamos el INVITE de cerca.
 ** ¿Puede verse el nombre del que efectúa la llamada, así como su dirección SIP?
El nombre es grex y la dirección SIP grex@ekiga.net

** ¿Qué es lo que contiene el cuerpo de la trama? ¿En qué formato/protocolo está?
En el cuerpo de la trama viene las características de la información que se va a 
mandar(SDP).

** ¿Tiene éxito el primer intento? ¿Cómo lo sabes?
No tiene éxito,observamos que el servidor le contesta con un mensaje de error
407 Proxy Authentication Requiered

** ¿En qué se diferencia el segundo INVITE más abajo del primero? ¿A qué crees que se debe esto?
El segundo INVITE contiene la cabecera:
Proxy-Authorization: Digest username="grex", realm="ekiga.net", nonce="45a439f6ba5f681cd945fb7c40529fd1e0f28a81", uri="sip:500@ekiga.net", algorithm=md5, response="9a5627c14a8a433bd308d2ec54777240"

11. Una vez conectado, estudia el intercambio de tramas.

 ** ¿Qué protocolo(s) se utiliza(n)? ¿Para qué sirven estos protocolos?
 RTP,RTCP y H.261. 
RTP : transporte de tráfico multimedia en internet. Dentro de RTP distinguimos entre
audio y video(H261)
RTCP : proporciona información de control sobre la calidad de la transmisión.


** ¿Cuál es el tamaño de paquete de los mismos?
RTP : 214 bytes
RTCP : 102 y 43 bytes.

** ¿Se utilizan bits de padding?
- No se utilizan bits de padding "Padding:False"


** ¿Cuál es la periodicidad de los paquetes que se envían?
RTP : 20ms
RTCP : 5s

** ¿Cuántos bits/segundo estamos enviando?
50 paquetes/s * 1280bits/paquete = 64000 bits/s




[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

12. Vamos a ver más a fondo el intercambio RTP. En Telephony hay una opción RTP. Empecemos mirando los flujos RTP.
 ** ¿Cuántos flujos hay? ¿por qué?
Podemos observar dos flujos, uno es para video y otro para audio(especificados en el Payload)
 
** ¿Cuántos paquetes se pierden?
Ninguno
 
** ¿Cuál es el valor máximo del delta? ¿Y qué es lo que significa el valor de delta?
El valor máximo del delta es 1290.48ms para el flujo de video
y 1290.44ms para el flujo de audio. 
El valor de delta nos indica el intervalo de tiempo entre paquetes

 ** ¿Cuáles son los valores de jitter (medio y máximo)? ¿Qué quiere decir eso? ¿Estamos ante una conversación de calidad?
El valor máximo del jitter es 183.10 para el fujo de video y
119.64 para el flujo de audio.
EL valor medio del jitter para el fujo de video es 153.24 y para el flujo
de audio 42.50.

El jitter nos indica la variación del retardo (MEAN JITTER). 
Para determinar si estamos ante una conversación de calidad podemos observar
la gráfica IO Graphs, aquí para que sea una conversación de calidad debería de tener una forma rectangular y en cambio observamos variaciones bruscas por tanto podemos decir que esta conversación no tiene mucha calidad.
Veremos que la calidad de una conversación depende mucho de la percepción de cada persona

13. Elige un paquete RTP de audio. Analiza el flujo de audio en Telephony -> RTP -> Stream Analysis.
 ** ¿Cuánto valen el delta y el jitter para el primer paquete que ha llegado?
0.00
 
** ¿Podemos saber si éste es el primer paquete que nos han enviado?
No porque no sabemos los paquetes que se han enviado antes. El valor de delta y 
el jitter es 0 porque es el paquete desde el cual empezamos a mirar

 ** Los valores de jitter son menores de 10ms hasta un paquete dado. ¿Cuál?
Hasta el paquete 246.
 
** ¿A qué se debe el cambio tan brusco del jitter?
El cambio tan brusco del jitter se debe a una acción puntual
 ** ¿Es comparable este cambio con el tiempo desde la recepción del paquete anterior? ¿Por qué?
Si es comparable porque el valor del jitter depende del valor de la delta, si el valor de la delta crece bruscamente el valor del jitter también crecerá
 
** ¿Cuál es la dependencia entre el tiempo transcurrido desde el paquete anterior y el valor de jitter?
El jitter es un "ajuste" dependiente del valor que tome Delta

14. En Telephony selecciona el menú VoIP calls. Verás que se lista la llamada de voz IP capturada en una ventana emergente. Selecciona esa llamada y pulsa el botón Graph.
 ** ¿Cuánto dura la conversación? 
Stop Time - Start time = 24.80289s

 ** ¿Cuáles son sus SSRC? ¿Por qué hay varios SSRCs? ¿Hay CSRCs?
Los SSRC identifican el flujo al que pertenece cada paquete, por eso al tener dos flujos tendremos dos SSRCS:
- Vídeo : 0x43306582 (paquete 196)
- Audio : 0xBF4AFD37 (paquete 611)

No hay CSRCs

15. Identifica la trama donde se finaliza la conversación.
 ** ¿Qué método SIP se utiliza?
BYE : terminación de sesión
 ** ¿En qué trama(s)?
924,925,927,933
 ** ¿Por qué crees que se envía varias veces?
Se envía varías veces el BYE porque quiere asegurarse de recibir el 
200 Ok en el menor tiempo posible.


16. Finalmente, se cierra la aplicación de VozIP.
 ** ¿Por qué aparece una instrucción SIP del tipo REGISTER?
Para darnos de baja como usuario una vez terminada la sesión
 ** ¿En qué trama sucede esto?
950 y 952
 ** ¿En qué se diferencia con la instrucción que se utilizó con anterioridad (al principio de la sesión)?
Se diferencian en el campo expires, ahora se manda a cero y el de inicio de sesión se mandaba con un expires de 3600s, el campo expires a cero indica que el usuario quiere darse de baja.



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

================================================================================
================================================================================

Captura de una sesión SIP

Captura una sesión SIP de una conversación con el número SIP sip:9999@qxip.net. Tendrás que dar de alta una cuenta en www.ekiga.net con el navegador. Recuerda también que has de comenzar a capturar tramas antes de arrancar Ekiga para ver todo el proceso en el que participa SIP. Para realizar los siguientes ejercicios, deberás crearte una cuenta en ekiga.net y darte de alta la lanzar la aplicación.

17. Observa las diferencias en el inicio de la conversación entre el entorno del laboratorio y el del ejercicio anterior:
 ** ¿Es necesario el uso de DNS y STUN? ¿Por qué?
 ** ¿Son diferentes el registro y la descripción de la sesión?


18. Identifica las diferencias existentes entre esta conversación y la conversación anterior:
 ** ¿Cuántos flujos tenemos?
 ** ¿Cuál es su periodicidad?
 ** ¿Cuánto es el valor máximo del delta y los valores medios y máximo del jitter?
 ** ¿Podrías reproducir la conversación desde Wireshark? ¿Cómo? Comprueba que poniendo un valor demasiado pequeño para el buffer de jitter, la conversación puede no tener la calidad necesaria.
 ** ¿Sabrías decir qué tipo de servicio ofrece sip:9999@qxip.net?



[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

19. Filtra por los paquetes SIP de la captura y guarda únicamente los paquetes SIP como sip.libpcap. Abre el fichero guardado para cerciorarte de que lo has hecho bien. Deberás guardarlo en un archivo de nombre p5.libpcap y añadirlo al repositorio.

[Al terminar el ejercicio es recomendable hacer commit de los ficheros modificados]

[Al terminar la práctica, realiza un push para sincronizar tu repositorio GitHub]

[Recuerda mirar el guión para ver las instrucciones de entrega]
